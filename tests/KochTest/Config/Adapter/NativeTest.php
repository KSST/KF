<?php

namespace KochTest\Config\Adapter;

use Koch\Config\Adapter\Native;
use org\bovigo\vfs\vfsStream;
use org\bovigo\vfs\vfsStreamDirectory;
use org\bovigo\vfs\vfsStreamWrapper;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-12 at 22:36:31.
 */
class NativeTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Native
     */
    protected $object;

    private $file;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        $this->object = new Native;

        $this->configFileURL = vfsStream::url('root/config.php');

        // create virtual config file with content
        $this->file = vfsStream::newFile('config.php', 000)
            ->withContent($this->getConfigContent());
        // add file to dir
        $this->rootFolder = new vfsStreamDirectory('root');
        $this->rootFolder->addChild($this->file);

        vfsStreamWrapper::register();
        vfsStreamWrapper::setRoot($this->rootFolder);

        // lets test vfsStream
        $this->assertFileExists($this->configFileURL);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public function tearDown()
    {
        unset($this->object);
    }

    /**
     * @covers Koch\Config\Adapter\Native::readConfig
     */
    public function testReadConfig()
    {
        $file = vfsStream::url($this->file);
        $this->object->readConfig($file);
    }

    /**
     * @covers Koch\Config\Adapter\Native::writeConfig
     */
    public function testWriteConfig()
    {
        $file = vfsStream::url($this->file);
        $this->object->writeConfig($file, $this->getConfigContent());
    }

    public function getConfigContent()
    {
        return array(
            'test' => 'value'
        );
    }
}
